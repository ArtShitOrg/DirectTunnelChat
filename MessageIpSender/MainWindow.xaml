<Window x:Class="MessageIpSender.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:convert="clr-namespace:MessageIpSender.Converters"
        Title="Chat IP-connecter" Height="525" Width="400"
        Visibility="Visible"
        Background="Transparent"
        KeyDown="Window_KeyDown">
    <Window.Resources>
        <convert:IsConnectedValueConverterButton x:Key="ButtonConverter"/>
        <convert:IsConnectedValueConverterColor x:Key="ColorConverter"/>
        <convert:MessageValueConverterColor x:Key="MessageConverter"/>
        <convert:ListValueConverterWidth x:Key="WidthConverter"/>
        <convert:TimeSpanCutConverter x:Key="TimeSpanCutConverter"/>
        <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="buttonBorder" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="Black"/>
                                <Setter Property="BorderBrush" Value="#444444"/>
                                <Setter Property="Background" Value="#DDDDDD"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter Property="Foreground" Value="Black"/>
                                <Setter Property="BorderBrush" Value="Black"/>
                                <Setter Property="Background" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="buttonBorder" Property="Background" Value="Black" />
                                <Setter Property="Foreground" Value="White" />
                                <Setter TargetName="buttonBorder" Property="BorderBrush" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Border>
        <Grid Background="#EEEEEE">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Button Command="{Binding CommandConnected}" Style="{DynamicResource ButtonStyle}" Width="100" Height="28" Margin="24,14,0,12" HorizontalAlignment="Left" FontFamily="Calibri" FontSize="12" Content="{Binding IsConnected, Converter={StaticResource ButtonConverter}}">

            </Button>
            <Border Height="8" Width="8" Background="{Binding IsConnected, Converter={StaticResource ColorConverter}}" HorizontalAlignment="Left" Margin="27,24,0,22"/>
            <StackPanel HorizontalAlignment="Right" Margin="0,8,0,2" Height="45">
                <StackPanel Margin="140,0,6,2" Orientation="Horizontal" VerticalAlignment="Top">
                    <TextBlock Foreground="Black" Text="To:"/>
                    <TextBox Text="{Binding IPSend}" Height="21" Width="150" Margin="19,0,0,0"/>
                    <TextBlock Foreground="Black" Text=" : "/>
                    <TextBox Text="{Binding PortSend}" Height="21" Width="50"/>
                </StackPanel>
                <StackPanel Margin="140,0,6,0" Orientation="Horizontal" VerticalAlignment="Top">
                    <TextBlock Foreground="Black" Text="From:"/>
                    <TextBox Text="{Binding IPHost}" Height="21" Width="150" Margin="6,0,0,0"/>
                    <TextBlock Foreground="Black" Text=" : "/>
                    <TextBox Text="{Binding PortHost}" Height="21" Width="50"/>
                </StackPanel>
            </StackPanel>

            <TextBlock Text="   Ваше сообщение:" Grid.Row="1" Foreground="Black"/>
            <TextBox Grid.Row="1" x:Name="MessageBox" Text="{Binding Message}" KeyDown="Window_KeyDown" TextWrapping="WrapWithOverflow" Height="100" Margin="6,18,6,0"/>

            <ListBox Grid.Row="3" Margin="6,6,6,6" x:Name="MessageList"
                     ItemsSource="{Binding Messages}" SelectedItem="{Binding SelectedItem}" Grid.RowSpan="2">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Border Width="{Binding ElementName=MessageList, Path=ActualWidth, Converter={StaticResource WidthConverter}}"
                                Background="{Binding IsFromMe, Converter={StaticResource MessageConverter}}">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock TextWrapping="Wrap" Foreground="DimGray" Text="{Binding Time, Converter={StaticResource TimeSpanCutConverter}}" FontSize="12" Margin="0,0,12,0"/>
                                <TextBlock TextWrapping="Wrap" Text="{Binding Message}" FontSize="12" />
                            </StackPanel>
                        </Border>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <Button x:Name="buttonSend" Grid.Row="2" Style="{DynamicResource ButtonStyle}" Command="{Binding CommandSend}" HorizontalAlignment="Right" Margin="0,6,6,6" Height="28" Width="100" Content="Отправить!"/>
        </Grid>
    </Border>
</Window>
